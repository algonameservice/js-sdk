{"version":3,"sources":["../node_modules/tsup/assets/cjs_shims.js","../src/constants.js","../src/errors.js","../src/generateTeal.js","../src/transactions.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","\"use strict\";\nexports.__esModule = true;\nexports.APP_ID = 628095415;\nexports.REGISTRATION_PRICE = {\n  CHAR_3_AMOUNT: 150000000,\n  CHAR_4_AMOUNT: 50000000,\n  CHAR_5_AMOUNT: 5000000,\n};\nexports.TRANSFER_FEE = 2000000;\nexports.IPFS_LINK = \"https://ipfs.infura.io/ipfs/\";\nexports.ASCII_CODES = {\n  ASCII_A: 97,\n  ASCII_Z: 122,\n  ASCII_0: 48,\n  ASCII_9: 57,\n};\nexports.ALLOWED_SOCIALS = [\n  \"github\",\n  \"twitter\",\n  \"telegram\",\n  \"youtube\",\n  \"reddit\",\n  \"discord\",\n];\n","\"use strict\";\nvar __extends =\n  (this && this.__extends) ||\n  (function () {\n    var extendStatics = function (d, b) {\n      extendStatics =\n        Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array &&\n          function (d, b) {\n            d.__proto__ = b;\n          }) ||\n        function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype =\n        b === null\n          ? Object.create(b)\n          : ((__.prototype = b.prototype), new __());\n    };\n  })();\nexports.__esModule = true;\nvar AddressValidationError = /** @class */ (function (_super) {\n  __extends(AddressValidationError, _super);\n  function AddressValidationError() {\n    var _this =\n      _super.call(this, \"This is not a valid Algorand address\") || this;\n    _this.name = \"InvalidAddressError\";\n    _this.type = \"InvalidAddressError\";\n    return _this;\n  }\n  return AddressValidationError;\n})(Error);\nexports.AddressValidationError = AddressValidationError;\nvar InvalidNameError = /** @class */ (function (_super) {\n  __extends(InvalidNameError, _super);\n  function InvalidNameError() {\n    var _this =\n      _super.call(\n        this,\n        \"The name must be between 3 and 64 characters and must only contain a-z and 0-9 characters\"\n      ) || this;\n    _this.name = \"InvalidNameError\";\n    _this.type = \"InvalidNameError\";\n    return _this;\n  }\n  return InvalidNameError;\n})(Error);\nexports.InvalidNameError = InvalidNameError;\nvar NameNotRegisteredError = /** @class */ (function (_super) {\n  __extends(NameNotRegisteredError, _super);\n  function NameNotRegisteredError(name) {\n    var _this =\n      _super.call(this, \"Name \" + name + \" is not registered\") || this;\n    _this.name = \"NameNotRegisteredError\";\n    _this.type = \"NameNotRegisteredError\";\n    return _this;\n  }\n  return NameNotRegisteredError;\n})(Error);\nexports.NameNotRegisteredError = NameNotRegisteredError;\nvar IncorrectOwnerError = /** @class */ (function (_super) {\n  __extends(IncorrectOwnerError, _super);\n  function IncorrectOwnerError(name, address) {\n    var _this =\n      _super.call(this, \"Name \" + name + \".algo is not owned by \" + address) ||\n      this;\n    _this.name = \"IncorrectOwnerError\";\n    _this.type = \"IncorrectOwnerError\";\n    return _this;\n  }\n  return IncorrectOwnerError;\n})(Error);\nexports.IncorrectOwnerError = IncorrectOwnerError;\n","\"use strict\";\nexports.__esModule = true;\nfunction generateTeal(name) {\n  return (\n    '#pragma version 4\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 3\\n    ==\\n    bnz main_l22\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 4\\n    ==\\n    bnz main_l13\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 5\\n    >=\\n    bnz main_l4\\n    err\\n    main_l4:\\n    gtxn 0 Amount\\n    int 5000000\\n    >=\\n    assert\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l5:\\n    load 0\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    <\\n    bnz main_l12\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l11\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l10\\n    int 0\\n    return\\n    main_l9:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l10:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l9\\n    main_l11:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l9\\n    main_l12:\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l5\\n    main_l13:\\n    gtxn 0 Amount\\n    int 50000000\\n    >=\\n    assert\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l14:\\n    load 0\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    <\\n    bnz main_l21\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l20\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l19\\n    int 0\\n    return\\n    main_l18:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l19:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l18\\n    main_l20:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l18\\n    main_l21:\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l14\\n    main_l22:\\n    gtxn 0 Amount\\n    int 150000000\\n    >=\\n    assert\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l23:\\n    load 0\\n    byte \"' +\n    name +\n    '\"\\n    len\\n    <\\n    bnz main_l30\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l29\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l28\\n    int 0\\n    return\\n    main_l27:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l28:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l27\\n    main_l29:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \"register_name\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \"' +\n    name +\n    '\"\\n    ==\\n    &&\\n    assert\\n    b main_l27\\n    main_l30:\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \"' +\n    name +\n    '\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l23\\n    main_l31:\\n    return'\n  );\n}\nexports.generateTeal = generateTeal;\n","import algosdk from \"algosdk\";\nimport { APP_ID, REGISTRATION_PRICE, TRANSFER_FEE } from \"./constants.js\";\nimport { InvalidNameError } from \"./errors.js\";\nimport { generateTeal } from \"./generateTeal.js\";\n\nexport class Transactions {\n  private algodClient: any;\n\n  constructor(client?: any) {\n    this.algodClient = client;\n  }\n\n  async generateLsig(name: string) {\n    name = name.split(\".algo\")[0];\n    const client = this.algodClient;\n    let program = await client.compile(generateTeal(name)).do();\n    program = new Uint8Array(Buffer.from(program.result, \"base64\"));\n\n    return new algosdk.LogicSigAccount(program);\n  }\n\n  calculatePrice(name: string, period: number) {\n    let amount = 0;\n    name = name.split(\".algo\")[0];\n    if (name.length === 3) {\n      amount = REGISTRATION_PRICE.CHAR_3_AMOUNT * period;\n    } else if (name.length === 4) {\n      amount = REGISTRATION_PRICE.CHAR_4_AMOUNT * period;\n    } else if (name.length >= 5) {\n      amount = REGISTRATION_PRICE.CHAR_5_AMOUNT * period;\n    }\n    return amount;\n  }\n\n  async prepareNameRegistrationTransactions(\n    name: string,\n    address: string,\n    period: number\n  ) {\n    const algodClient = this.algodClient;\n    if (name.split(\".algo\")[0].length < 3) throw new InvalidNameError();\n    /* 1st Txn - Payment to Smart Contract */\n\n    let amount = 0;\n    const lsig = await this.generateLsig(name);\n    const params = await algodClient.getTransactionParams().do();\n\n    params.fee = 1000;\n    params.flatFee = true;\n\n    let receiver = algosdk.getApplicationAddress(APP_ID);\n    let sender = address;\n\n    if (period === undefined) {\n      period = 1;\n    }\n\n    amount = this.calculatePrice(name, period);\n\n    const closeToRemaninder = undefined;\n    const note = undefined;\n\n    const txn1 = algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      amount,\n      closeToRemaninder,\n      note,\n      params\n    );\n\n    const groupTxns = [];\n    groupTxns.push(txn1);\n\n    /* 2nd Txn - Funding Lsig */\n\n    sender = address;\n    receiver = lsig.address();\n    amount = 915000;\n\n    const txn2 = algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      amount,\n      closeToRemaninder,\n      note,\n      params\n    );\n\n    groupTxns.push(txn2);\n\n    /* 3rd Txn - Optin to App from Lsig */\n\n    const txn3 = await algosdk.makeApplicationOptInTxnFromObject({\n      from: lsig.address(),\n      suggestedParams: params,\n      appIndex: APP_ID,\n    });\n\n    groupTxns.push(txn3);\n\n    sender = lsig.address();\n    receiver = address;\n    amount = 0;\n\n    /* 4th Txn - Account registers name */\n\n    const method = \"register_name\";\n\n    const appArgs = [];\n\n    period++;\n\n    appArgs.push(new Uint8Array(Buffer.from(method)));\n    appArgs.push(new Uint8Array(Buffer.from(name)));\n    appArgs.push(algosdk.encodeUint64(period));\n    const txn4 = await algosdk.makeApplicationNoOpTxn(\n      address,\n      params,\n      APP_ID,\n      appArgs,\n      [lsig.address()]\n    );\n    groupTxns.push(txn4);\n\n    algosdk.assignGroupID(groupTxns);\n\n    const signedOptinTxn = algosdk.signLogicSigTransaction(groupTxns[2], lsig);\n\n    return {\n      optinTxn: signedOptinTxn,\n      txns: groupTxns,\n      unsignedOptinTxn: groupTxns[2],\n    };\n  }\n\n  async prepareUpdateNamePropertyTransactions(\n    name: string,\n    address: string,\n    editedHandles: any\n  ) {\n    const algodClient = this.algodClient;\n\n    const lsig = await this.generateLsig(name);\n    const params = await algodClient.getTransactionParams().do();\n    params.fee = 1000;\n    params.flatFee = true;\n\n    const method = \"update_name\";\n\n    const groupTxns = [];\n\n    for (const key in editedHandles) {\n      const appArgs = [];\n      const network = key;\n      const handle = editedHandles[key];\n\n      appArgs.push(new Uint8Array(Buffer.from(method)));\n      appArgs.push(new Uint8Array(Buffer.from(network)));\n      appArgs.push(new Uint8Array(Buffer.from(handle)));\n\n      const txn = await algosdk.makeApplicationNoOpTxn(\n        address,\n        params,\n        APP_ID,\n        appArgs,\n        [lsig.address()]\n      );\n      groupTxns.push(txn);\n    }\n\n    if (Object.keys(editedHandles).length > 1) {\n      algosdk.assignGroupID(groupTxns);\n    }\n\n    return groupTxns;\n  }\n\n  async preparePaymentTxn(\n    sender: string,\n    receiver: string,\n    amt: number,\n    note?: any\n  ) {\n    const algodClient = this.algodClient;\n    const params = await algodClient.getTransactionParams().do();\n    amt = algosdk.algosToMicroalgos(amt);\n    const enc = new TextEncoder();\n    note = enc.encode(note);\n    const closeToRemaninder = undefined;\n\n    return algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      amt,\n      closeToRemaninder,\n      note,\n      params\n    );\n  }\n\n  async prepareNameRenewalTxns(name: string, sender: string, years: number) {\n    name = name.split(\".algo\")[0];\n    const algodClient = this.algodClient;\n    const params = await algodClient.getTransactionParams().do();\n    const receiver = algosdk.getApplicationAddress(APP_ID);\n    const closeToRemaninder = undefined;\n    const note = undefined;\n    const paymentTxn = algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      this.calculatePrice(name, years),\n      closeToRemaninder,\n      note,\n      params\n    );\n\n    const lsig = await this.generateLsig(name);\n\n    const appArgs = [];\n    appArgs.push(new Uint8Array(Buffer.from(\"renew_name\")));\n    appArgs.push(algosdk.encodeUint64(years));\n\n    const applicationTxn = algosdk.makeApplicationNoOpTxn(\n      sender,\n      params,\n      APP_ID,\n      appArgs,\n      [lsig.address()]\n    );\n\n    algosdk.assignGroupID([paymentTxn, applicationTxn]);\n\n    return [paymentTxn, applicationTxn];\n  }\n\n  async prepareInitiateNameTransferTransaction(\n    name: string,\n    sender: string,\n    newOwner: string,\n    price: number\n  ) {\n    const algodClient = this.algodClient;\n    price = algosdk.algosToMicroalgos(price);\n    const params = await algodClient.getTransactionParams().do();\n    name = name.split(\".algo\")[0];\n\n    const lsig = await this.generateLsig(name);\n\n    const appArgs = [];\n    appArgs.push(new Uint8Array(Buffer.from(\"initiate_transfer\")));\n    appArgs.push(algosdk.encodeUint64(price));\n\n    return algosdk.makeApplicationNoOpTxn(sender, params, APP_ID, appArgs, [\n      lsig.address(),\n      newOwner,\n    ]);\n  }\n\n  async prepareAcceptNameTransferTransactions(\n    name: string,\n    sender: string,\n    receiver: string,\n    amt: number\n  ) {\n    amt = algosdk.algosToMicroalgos(amt);\n    const algodClient = this.algodClient;\n    const params = await algodClient.getTransactionParams().do();\n\n    const closeToRemaninder = undefined;\n    const note = undefined;\n    const paymentToOwnerTxn = algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      amt,\n      closeToRemaninder,\n      note,\n      params\n    );\n\n    receiver = algosdk.getApplicationAddress(APP_ID);\n\n    const paymentToSmartContractTxn = algosdk.makePaymentTxnWithSuggestedParams(\n      sender,\n      receiver,\n      TRANSFER_FEE,\n      closeToRemaninder,\n      note,\n      params\n    );\n\n    name = name.split(\".algo\")[0];\n\n    const lsig = await this.generateLsig(name);\n\n    const appArgs = [];\n    appArgs.push(new Uint8Array(Buffer.from(\"accept_transfer\")));\n\n    const applicationTxn = algosdk.makeApplicationNoOpTxn(\n      sender,\n      params,\n      APP_ID,\n      appArgs,\n      [lsig.address()]\n    );\n\n    algosdk.assignGroupID([\n      paymentToOwnerTxn,\n      paymentToSmartContractTxn,\n      applicationTxn,\n    ]);\n\n    return [paymentToOwnerTxn, paymentToSmartContractTxn, applicationTxn];\n  }\n}\n"],"mappings":"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","names":[]}