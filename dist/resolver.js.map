{"version":3,"sources":["../node_modules/tsup/assets/cjs_shims.js","../src/constants.js","../src/errors.js","../src/generateTeal.js","../src/resolver.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","\"use strict\";\nexports.__esModule = true;\nexports.APP_ID = 628095415;\nexports.REGISTRATION_PRICE = {\n    CHAR_3_AMOUNT: 150000000,\n    CHAR_4_AMOUNT: 50000000,\n    CHAR_5_AMOUNT: 5000000\n};\nexports.TRANSFER_FEE = 2000000;\nexports.IPFS_LINK = \"https://ipfs.infura.io/ipfs/\";\nexports.ASCII_CODES = {\n    ASCII_A: 97,\n    ASCII_Z: 122,\n    ASCII_0: 48,\n    ASCII_9: 57\n};\nexports.ALLOWED_SOCIALS = [\n    \"github\",\n    \"twitter\",\n    \"telegram\",\n    \"youtube\",\n    \"reddit\",\n    \"discord\",\n];\nexports.ALLOWED_TLDS = [\"algo\"];\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar AddressValidationError = /** @class */ (function (_super) {\n    __extends(AddressValidationError, _super);\n    function AddressValidationError() {\n        var _this = _super.call(this, \"This is not a valid Algorand address\") || this;\n        _this.name = \"InvalidAddressError\";\n        _this.type = \"InvalidAddressError\";\n        return _this;\n    }\n    return AddressValidationError;\n}(Error));\nexports.AddressValidationError = AddressValidationError;\nvar InvalidNameError = /** @class */ (function (_super) {\n    __extends(InvalidNameError, _super);\n    function InvalidNameError() {\n        var _this = _super.call(this, \"The name must be between 3 and 64 characters and must only contain a-z and 0-9 characters\") || this;\n        _this.name = \"InvalidNameError\";\n        _this.type = \"InvalidNameError\";\n        return _this;\n    }\n    return InvalidNameError;\n}(Error));\nexports.InvalidNameError = InvalidNameError;\nvar NameNotRegisteredError = /** @class */ (function (_super) {\n    __extends(NameNotRegisteredError, _super);\n    function NameNotRegisteredError(name) {\n        var _this = _super.call(this, \"Name \" + name + \" is not registered\") || this;\n        _this.name = \"NameNotRegisteredError\";\n        _this.type = \"NameNotRegisteredError\";\n        return _this;\n    }\n    return NameNotRegisteredError;\n}(Error));\nexports.NameNotRegisteredError = NameNotRegisteredError;\nvar IncorrectOwnerError = /** @class */ (function (_super) {\n    __extends(IncorrectOwnerError, _super);\n    function IncorrectOwnerError(name, address) {\n        var _this = _super.call(this, \"Name \" + name + \".algo is not owned by \" + address) || this;\n        _this.name = \"IncorrectOwnerError\";\n        _this.type = \"IncorrectOwnerError\";\n        return _this;\n    }\n    return IncorrectOwnerError;\n}(Error));\nexports.IncorrectOwnerError = IncorrectOwnerError;\n","\"use strict\";\nexports.__esModule = true;\nfunction generateTeal(name) {\n    return \"#pragma version 4\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 3\\n    ==\\n    bnz main_l22\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 4\\n    ==\\n    bnz main_l13\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 5\\n    >=\\n    bnz main_l4\\n    err\\n    main_l4:\\n    gtxn 0 Amount\\n    int 5000000\\n    >=\\n    assert\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l5:\\n    load 0\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    <\\n    bnz main_l12\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l11\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l10\\n    int 0\\n    return\\n    main_l9:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l10:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l9\\n    main_l11:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l9\\n    main_l12:\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l5\\n    main_l13:\\n    gtxn 0 Amount\\n    int 50000000\\n    >=\\n    assert\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l14:\\n    load 0\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    <\\n    bnz main_l21\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l20\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l19\\n    int 0\\n    return\\n    main_l18:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l19:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l18\\n    main_l20:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l18\\n    main_l21:\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l14\\n    main_l22:\\n    gtxn 0 Amount\\n    int 150000000\\n    >=\\n    assert\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    int 64\\n    <=\\n    assert\\n    int 0\\n    store 0\\n    main_l23:\\n    load 0\\n    byte \\\"\" + name + \"\\\"\\n    len\\n    <\\n    bnz main_l30\\n    global GroupSize\\n    int 2\\n    ==\\n    global GroupSize\\n    int 4\\n    ==\\n    ||\\n    assert\\n    gtxn 0 Sender\\n    gtxn 1 Sender\\n    ==\\n    assert\\n    gtxn 0 Receiver\\n    addr SYGCDTWGBXKV4ZL5YAWSYAVOUC25U2XDB6SMQHLRCTYVF566TQZ3EOABH4\\n    ==\\n    assert\\n    global GroupSize\\n    int 2\\n    ==\\n    bnz main_l29\\n    global GroupSize\\n    int 4\\n    ==\\n    bnz main_l28\\n    int 0\\n    return\\n    main_l27:\\n    int 1\\n    assert\\n    int 1\\n    b main_l31\\n    main_l28:\\n    gtxn 1 Receiver\\n    gtxn 2 Sender\\n    ==\\n    gtxn 2 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 2 OnCompletion\\n    int OptIn\\n    ==\\n    &&\\n    gtxn 3 ApplicationID\\n    int 628095415\\n    ==\\n    &&\\n    gtxn 3 Sender\\n    gtxn 0 Sender\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 3 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l27\\n    main_l29:\\n    gtxn 1 ApplicationID\\n    int 628095415\\n    ==\\n    gtxna 1 ApplicationArgs 0\\n    byte \\\"register_name\\\"\\n    ==\\n    &&\\n    gtxna 1 ApplicationArgs 1\\n    byte \\\"\" + name + \"\\\"\\n    ==\\n    &&\\n    assert\\n    b main_l27\\n    main_l30:\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 97\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 122\\n    <=\\n    &&\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 48\\n    >=\\n    byte \\\"\" + name + \"\\\"\\n    load 0\\n    getbyte\\n    int 57\\n    <=\\n    &&\\n    ||\\n    assert\\n    load 0\\n    int 1\\n    +\\n    store 0\\n    b main_l23\\n    main_l31:\\n    return\";\n}\nexports.generateTeal = generateTeal;\n","import algosdk from \"algosdk\";\nimport { APP_ID, ALLOWED_SOCIALS } from \"./constants.js\";\nimport { InvalidNameError, AddressValidationError } from \"./errors.js\";\nimport { generateTeal } from \"./generateTeal.js\";\n\ndeclare const Buffer: any;\n\nexport class Resolver {\n  private algodClient: algosdk.Algodv2;\n  private indexerClient: algosdk.Indexer;\n  private cache: any;\n  private name: string | undefined;\n\n  constructor(client: algosdk.Algodv2, indexer: algosdk.Indexer, name?: string) {\n    this.algodClient = client;\n    this.indexerClient = indexer;\n    if(name) {\n      this.name = name;\n      this.resolveName();\n    }\n    \n  }\n\n  async generateLsig(name?:string) {\n    if(name === undefined) {\n      name = this.name;\n    }\n    let program = await this.algodClient.compile(generateTeal(name)).do();\n    program = new Uint8Array(Buffer.from(program.result, \"base64\"));\n    return new algosdk.LogicSigAccount(program);\n  }\n\n  async resolveName(name?: string) {\n    if(name === undefined && this.cache !== undefined) {\n      return this.cache\n    } else if(name === undefined) {\n      name = this.name;\n    } \n    \n    if (name.length === 0 || name.length > 64) {\n      throw new InvalidNameError();\n    } \n    const indexer = await this.indexerClient;\n    const lsig = await this.generateLsig(name);\n    let found = false;\n    try {\n      let accountInfo = await indexer.lookupAccountByID(lsig.address()).do();\n\n      accountInfo = accountInfo.account[\"apps-local-state\"];\n\n      const length = accountInfo.length;\n      let address;\n\n      let socials: any = [],\n        metadata: any = [];\n      for (let i = 0; i < length; i++) {\n        const app = accountInfo[i];\n        if (app.id === APP_ID) {\n          const kv = app[\"key-value\"];\n          const decodedKvPairs = this.decodeKvPairs(kv);\n          socials = this.filterKvPairs(decodedKvPairs, \"socials\");\n          metadata = this.filterKvPairs(decodedKvPairs, \"metadata\");\n          found = true;\n          address = metadata.filter((kv: any) => kv.key === \"owner\")[0].value;\n        }\n      }\n\n      if (found) {\n        if(this.cache === undefined && name === this.name) {\n          this.cache = {\n            found,\n            address,\n            socials,\n            metadata\n          }\n        }\n        return {\n          found,\n          address,\n          socials,\n          metadata,\n        };\n      } else return { found };\n    } catch (err) {\n      return { found };\n    }\n    \n  }\n\n  async getNamesOwnedByAddress(\n    address: string,\n    socials?: boolean,\n    metadata?: boolean,\n    limit?: number\n  ) {\n    const isValidAddress: boolean = await algosdk.isValidAddress(address);\n    if (!isValidAddress) {\n      throw new AddressValidationError();\n    } else {\n      const indexer = await this.indexerClient;\n\n      let nextToken = \"\";\n      let txnLength = 1;\n      let txns = [];\n      while (txnLength > 0) {\n        try {\n          const info = await indexer\n            .searchForTransactions()\n            .address(address)\n            .addressRole(\"sender\")\n            .afterTime(\"2022-02-24\")\n            .txType(\"appl\")\n            .applicationID(APP_ID)\n            .nextToken(nextToken)\n            .do();\n\n          txnLength = info.transactions.length;\n          if (txnLength > 0) {\n            nextToken = info[\"next-token\"];\n            txns.push(info.transactions);\n          }\n        } catch (err) {\n          return false;\n        }\n      }\n\n      let accountTxns: any = [];\n      for (let i = 0; i < txns.length; i++) {\n        accountTxns = accountTxns.concat(txns[i]);\n      }\n\n      txns = accountTxns;\n      const names: any = await this.filterDomainRegistrationTxns(txns);\n\n      if (names.length > 0) {\n        const details = [];\n\n        for (let i = 0; i < names.length; i++) {\n          if (limit !== undefined) {\n            if (details.length >= limit) break;\n          }\n          \n          const info: any = await this.resolveName(names[i]);\n          if (info.found && info.address !== undefined) {\n            if (info.address === address) {\n              const domain: any = {\n                name: \"\",\n              };\n              domain.name = names[i] + \".algo\";\n              if (socials) {\n                domain[\"socials\"] = info.socials;\n              }\n              if (metadata) {\n                domain[\"metadata\"] = info.metadata;\n              }\n              details.push(domain);\n            }\n          } else {\n            i = i - 1;\n          }\n        }\n        return details;\n      }\n    }\n  }\n\n  filterKvPairs(kvPairs: any, type: string) {\n    const socials = [],\n      metadata = [];\n\n    for (const i in kvPairs) {\n      const key = kvPairs[i].key;\n      const value = kvPairs[i].value;\n\n      const kvObj = {\n        key: key,\n        value: value,\n      };\n\n      if (ALLOWED_SOCIALS.includes(key)) {\n        socials.push(kvObj);\n      } else {\n        metadata.push(kvObj);\n      }\n    }\n    if (type === \"socials\") {\n      return socials;\n    } else if (type === \"metadata\") {\n      return metadata;\n    }\n  }\n\n  decodeKvPairs(kvPairs: any) {\n    return kvPairs.map((kvPair: any) => {\n      const decodedKvPair = {\n        key: \"\",\n        value: \"\",\n      };\n      let key: string = kvPair.key;\n      key = Buffer.from(key, \"base64\").toString();\n      decodedKvPair.key = key;\n      const value: any = kvPair.value;\n      if (key === \"owner\") {\n        decodedKvPair.value = algosdk.encodeAddress(\n          new Uint8Array(Buffer.from(value.bytes, \"base64\"))\n        );\n      } else if (value.type === 1) {\n        decodedKvPair.value = Buffer.from(value.bytes, \"base64\").toString();\n      } else if (value.type === 2) {\n        decodedKvPair.value = value.uint;\n      }\n      return decodedKvPair;\n    });\n  }\n\n  async filterDomainRegistrationTxns(txns: any) {\n    const names: any = [];\n    const indexer = this.indexerClient;\n    try {\n      for (let i = 0; i < txns.length; i++) {\n        const txn = txns[i];\n\n        if (txn[\"tx-type\"] === \"appl\") {\n          if (txn[\"application-transaction\"][\"application-id\"] === APP_ID) {\n            const appArgs = txn[\"application-transaction\"][\"application-args\"];\n\n            if (\n              Buffer.from(appArgs[0], \"base64\").toString() === \"register_name\"\n            ) {\n              if (!names.includes(Buffer.from(appArgs[1], \"base64\").toString()))\n                names.push(Buffer.from(appArgs[1], \"base64\").toString());\n            } else if (\n              Buffer.from(appArgs[0], \"base64\").toString() === \"accept_transfer\"\n            ) {\n              const lsigAccount = txn[\"application-transaction\"][\"accounts\"][0];\n              let accountInfo = await indexer\n                .lookupAccountByID(lsigAccount)\n                .do();\n              accountInfo = accountInfo.account[\"apps-local-state\"];\n\n              const length = accountInfo.length;\n\n              for (let i = 0; i < length; i++) {\n                if (accountInfo[i].id === APP_ID) {\n                  const kvPairs = accountInfo[i][\"key-value\"];\n                  const domainInfo = this.decodeKvPairs(kvPairs).filter(\n                    (domain: any) => domain.key === \"name\"\n                  );\n                  if (!names.includes(domainInfo[0].value)) {\n                    names.push(domainInfo[0].value);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      return [];\n    }\n\n    return names;\n  }\n\n  async owner() {\n    const domainInformation: any = await this.resolveName();\n    if (domainInformation.found === true) {\n      return domainInformation.address;\n    } else return \"Not Registered\";\n  }\n\n  async text(key: string) {\n    const domainInformation: any = await this.resolveName();\n    if (domainInformation.found === true) {\n      const socialRecords = domainInformation.socials.filter(\n        (social: any) => social.key === key\n      );\n      if (socialRecords.length > 0) {\n        return socialRecords[0].value;\n      } else {\n        const metadataRecords = domainInformation.metadata.filter(\n          (metadata: any) => metadata.key === key\n        );\n        if (metadataRecords.length > 0) {\n          return metadataRecords[0].value;\n        } else {\n          return \"Property not set\";\n        }\n      }\n    } else {\n      return \"Not Registered\";\n    }\n  }\n\n  async expiry() {\n    const domainInformation: any = await this.resolveName();\n    if (domainInformation.found === true) {\n      //Convert milliseconds to seconds by multiplying with 1000\n      return new Date(\n        domainInformation.metadata.filter(\n          (data: any) => data.key === \"expiry\"\n        )[0].value * 1000\n      );\n    } else return \"Not Registered\";\n  }\n\n  async content(): Promise<string> {\n    const domainInformation: any = await this.resolveName();\n    if (domainInformation.found === true) {\n      const contentRecords: any[] = domainInformation.metadata.filter(\n        (kv: any) => kv.key === \"content\"\n      );\n      if (contentRecords.length > 0) {\n        return contentRecords[0].value;\n      } else {\n        return \"Content field is not set\";\n      }\n    } else {\n      return \"Domain not registered\";\n    }\n  }\n}\n"],"mappings":"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","names":[]}